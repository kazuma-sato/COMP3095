package servlet.register;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/RegisterServlet")
public class RegisterServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
      
	protected void doGet(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		response.setContentType("text/html");
		
		FormError errors = formValidation(request);
		
		final String FIRST_NAME = request.getParameter("firstName").trim();
		final String LAST_NAME = request.getParameter("lastName").trim();
		final String EMAIL = request.getParameter("email").trim().toLowerCase();
		final String PHONE = request.getParameter("phone1").trim() + 
				request.getParameter("phone2").trim() + 
				request.getParameter("phone3").trim();
		final String YEAR = request.getParameter("year").trim();
		final String MAJOR = request.getParameter("major").trim();
		final String USERNAME = request.getParameter("username").trim().toLowerCase();
		final String PASSWORD = request.getParameter("password").trim();
		
		final String JDBC_Driver = "com.mysql.jdbc.Driver";
		final String DB_URL = "jdbc:mysql://localhost/comp3095";
		final String DB_USER = "root";
		final String DB_PASS = "";
		
		if(!errors.isEmpty()){
			
			return;
		}
	}
	private FormError formValidation(HttpServletRequest request) {
		
		FormError errors = new FormError();
		final String FIRST_NAME = request.getParameter("firstName").trim();
		final String LAST_NAME = request.getParameter("lastName").trim();
		final String EMAIL = request.getParameter("email").trim().toLowerCase();
		final String CONFIRM_EMAIL = request.getParameter("confirmEmail").trim().toLowerCase();
		final String PHONE1 = request.getParameter("phone1").trim();
		final String PHONE2 = request.getParameter("phone2").trim();
		final String PHONE3 = request.getParameter("phone3").trim();
		final String YEAR = request.getParameter("year").trim();
		final String MAJOR = request.getParameter("major").trim();
		final String USERNAME = request.getParameter("username").trim().toLowerCase();
		final String PASSWORD = request.getParameter("password").trim();
		final String CONFIRM_PASSWORD = request.getParameter("confirmPassword").trim();
		
		errors.setFirstName(
				FIRST_NAME.isEmpty() ? "This field should not be empty. ":"");
		errors.setFirstName(
				FIRST_NAME.matches("^[\\p{L} .'-]+$") ? "Invalid charators used. ":"");
		
		errors.setLastName(
				LAST_NAME.isEmpty() ? "This field should not be empty.":"");
		errors.setLastName(
				LAST_NAME.matches("^[\\p{L} .'-]+$") ? "":"Invalid charators used. ");
		
		errors.setEmail(
				EMAIL.isEmpty() ? "This field should not be empty.":"");
		if(EMAIL.matches(
				"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"))
			errors.setEmail("Invalid email address");
		
		if (EMAIL != CONFIRM_EMAIL)
			errors.setEmail("Email does not match Confirm Email.");
		
		if(PHONE1.isEmpty() || 
				PHONE2.isEmpty() ||
				PHONE3.isEmpty())
			errors.setPhone("All 3 fields must be filled");
		if(tryParseInt(PHONE1) || 
				tryParseInt(PHONE2) ||
				tryParseInt(PHONE3))
			errors.setPhone("These fields only accept numbers.");
		if(PHONE1.length() != 3 || 
				PHONE2.length() != 3 ||
				PHONE3.length() != 4)
			errors.setPhone("Not the correct format (XXX)XXX-XXXX");
		
		errors.setYear(
				YEAR.isEmpty() ? "Please make a selection." : "");
		
		errors.setMajor(
				MAJOR.isEmpty() ? "Please make a selection" : "");
		
		errors.setUsername(
				USERNAME.isEmpty() ? "This field cannot be blank." : "");

		errors.setPassword(
				PASSWORD.isEmpty() ? "This field connot be blank," : "");
		if(PASSWORD != CONFIRM_PASSWORD)
				errors.setPassword("Password and Confirm Password did not match.");
				
		return errors;
	}
	private boolean tryParseInt(String value){
		try{
			Integer.parseInt(value);
			return true;
		} catch (NumberFormatException e){
			return false;
		}
	}

}
